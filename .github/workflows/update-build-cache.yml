name: Update Build Cache
on:
  schedule:
    - cron: "37 13 * * SAT"
  workflow_dispatch:
jobs:
  update-cache:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      androidApiVersion: 34
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Detect gradle version
        uses: actions/github-script@v7
        id: gradle-version-detector
        with:
          result-encoding: string
          script: |
            const scriptPath = '/./.github/scripts/gradle-version-detector.js'
            const script = require(`${process.env.GITHUB_WORKSPACE}${scriptPath}`)
            return script()
      - name: ðŸ“¦ðŸ’¥ Cleanup Existing Caches
        run: |
          gh extension install actions/gh-actions-cache
          set +e
          echo "Deleting caches..."
          cacheKeysForBranch=$(gh actions-cache list -R $REPO -B $BRANCH -L 100 | cut -f 1 )
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
              echo "Deleted $cacheKey"
          done
          echo "Successfully deleted caches"
      - name: Fetch gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ steps.gradle-version-detector.outputs.result }}
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Fetch AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-${{ env.androidApiVersion }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.androidApiVersion }}
          target: aosp_atd
          channel: stable
          arch: x86_64
          ram-size: 4096M
          disk-size: 2048M
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."
      - name: ðŸš§ Build and Update Cache
        run: ./gradlew assembleDebug --no-configuration-cache
      - name: ðŸ’Œ Send email report
        uses: actions/github-script@v7
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        with:
          script: |
            const subject = `Github Actions cache status of Jetflix Â¯\\_(ãƒ„)_/Â¯`
            const reportGeneratorScriptPath = '/./.github/scripts/cache-update-report-generator.js'
            const reportGeneratorScript = require(`${process.env.GITHUB_WORKSPACE}${reportGeneratorScriptPath}`)
            const report = await reportGeneratorScript({github, context})
            const mailSenderScriptPath = '/./.github/scripts/report-mail-sender.js'
            const mailSenderScript = require(`${process.env.GITHUB_WORKSPACE}${mailSenderScriptPath}`)
            mailSenderScript(subject, report)
