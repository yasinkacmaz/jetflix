apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
  defaultConfig {
    applicationId "com.yasinkacmaz.playground"
    minSdkVersion 21
    targetSdkVersion 30
    compileSdkVersion 30
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  buildFeatures {
    compose true
  }

  composeOptions {
    kotlinCompilerVersion "1.4.0-rc"
    kotlinCompilerExtensionVersion "0.1.0-dev16"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      jvmTarget = "1.8"
      freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
    }
  }
}

androidExtensions {
  experimental = true
}

kapt {
  correctErrorTypes = true
}

def daggerHiltVersion = "2.28-alpha"
def daggerHiltViewModelVersion = "1.0.0-alpha02"
def retrofitVersion = "2.7.1"
def lifecycleVersion = "2.2.0"
def composeVersion = "0.1.0-dev16"

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  // androidX
  implementation "androidx.appcompat:appcompat:1.2.0"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

  // ktx
  implementation "androidx.activity:activity-ktx:1.1.0"
  implementation "androidx.core:core-ktx:1.3.1"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

  // compose ui
  implementation "androidx.compose.ui:$composeVersion"
  implementation "androidx.compose.foundation:$composeVersion"
  // Constraint, ConstraintSet vs.
  implementation "androidx.compose.foundation.layout:$composeVersion"
  // Build Jetpack Compose UIs with ready to use Material Design Components.
  implementation "androidx.compose.material:material:$composeVersion"
  // observe live data as state
  implementation "androidx.compose.runtime.livedata:$composeVersion"
  // animation
  implementation "androidx.compose.animation.core:$composeVersion"

  // dagger hilt
  implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
  kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"
  implementation "androidx.hilt:hilt-lifecycle-viewmodel:$daggerHiltViewModelVersion"
  kapt "androidx.hilt:hilt-compiler:$daggerHiltViewModelVersion"

  // network
  implementation "com.squareup.okhttp3:okhttp:4.3.1"
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

  // io
  implementation "com.google.code.gson:gson:2.8.6"

  // test
  testImplementation 'junit:junit:4.13'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
